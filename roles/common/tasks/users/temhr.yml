---
- name: users | Temhr | create temhr group
  tags: always,temhr,users
  ansible.builtin.group:
    name: temhr
    state: present

- name: users | Temhr | create  user with sudo
  tags: always,temhr,users
  ansible.builtin.user:
    name: temhr
    group: temhr                    # Primary group (creates a group named temhr)
    shell: /bin/bash                # Login shell
    create_home: true               # Automatically create /home/temhr
    state: present                  # Ensure the user exists

- name: users | Temhr | ensure home directory permissions
  tags: temhr,users
  ansible.builtin.file:
    path: /home/temhr
    state: directory
    owner: temhr
    group: temhr
    mode: '0770'                    # Full access for user+group, none for others

- name: users | Temhr | add sudoers file
  tags: settings,temhr,sudo,system,users
  ansible.builtin.copy:
    dest: /etc/sudoers.d/temhr                                  # Install into system sudoers directory
    owner: root                                                 # File owned by root
    group: root                                                 # Group owned by root
    mode: '0440'                                                # Read-only, required for sudoers
    content: |
      temhr ALL=(ALL) NOPASSWD:ALL

- name: users | Temhr | create default home directories
  tags: dotfiles,users,temhr
  ansible.builtin.file:
    path: /home/temhr/{{ item.dir }}
    state: directory
    owner: temhr
    group: temhr
    mode: 0770
  with_items:
    - { dir: '.bash' }
    - { dir: '.config' }
    - { dir: 'bin' }

- name: users | Temhr | copy dotfiles
  tags: dotfiles,users,temhr
  ansible.builtin.copy:
    src: files/users/temhr/{{ item.src }}
    dest: /home/temhr/{{ item.dest }}
    owner: temhr
    group: temhr
    mode: '0770'                    # Full access for user+group, none for others
  with_items:
    - { src: 'bash/bashrc', dest: '.bashrc' }
    - { src: 'bash/bash_profile', dest: '.bash_profile' }
    - { src: 'bash/bash_aliases', dest: '.bash/bash_aliases' }
    - { src: 'bash/bash_prompt', dest: '.bash/bash_prompt' }
    - { src: 'bash/bash_functions', dest: '.bash/bash_functions' }
    - { src: 'bash/emoticons', dest: '.bash/emoticons' }
